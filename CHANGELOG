# 1.0 

No changes from 0.7.5

There were no significant changes for over a year, the [1.0 checklist](https://github.com/juxt/tick/issues/135) was complete, so as per 
[1.0 all the things](https://insideclojure.org/2020/02/18/lib-version/) approach, 0.7.5 was declared 1.0

# 0.7.x

* tick.interval.bounds function is now consistent for years, year-months and dates in setting the `end` to be inclusive
* Strings are no longer accepted as beginning/end when constructing an interval
* Strings are no longer accepted as arguments to clock
* ITimeSpan no longer implemented for types where beginning/end were the same - to recreate earlier behaviour, run `(t/backward-compatible-time-span-extensions)`
* add 3-arity between function to get quantity as number 

# 0.6.1 

Add equivalents of clojure.core's max-key and min-key 

# 0.6 

Tick works on babashka

# 0.5.0-RC6

To use this version from Clojurescript, you must have at least version 1.11.51. If using shadow-cljs, it must be at least version 2.19.3

The reason is that time-literals lib is using reader conditionals in data_readers.cljc which has only just been 
fixed in the latest Clojurescript.

# 0.5

* tick.core is the main api ns now. tick.alpha.api has been removed

* interval functions in tick.alpha.api have moved to tick.alpha.interval
* calendar and ical namespaces have also moved to tick.alpha 

* +/- functions now only work on periods or durations. Use >>/<< to move a date by an amount

This is so these functions make a stronger analogy to clojure's +/-. For example, the args to +  are associative, commutative & distributive.

* parse function has moved out of the main api. 

See tick.protocols/IParseable docstrings for more info